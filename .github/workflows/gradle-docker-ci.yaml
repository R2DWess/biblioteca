name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 262419
          MYSQL_DATABASE: biblioteca
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=262419"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      # ✅ Configuração do JDK 17
      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ⚡ Configuração do Gradle e Cache para melhor performance
      - name: Configurar Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # ✅ Aguarda MySQL estar pronto antes de rodar testes
      - name: Verificar conexão com MySQL
        run: |
          sudo apt-get install -y mysql-client
          echo "Aguardando MySQL iniciar..."
          until mysql --host=127.0.0.1 --user=root --password=262419 -e "SHOW DATABASES;"; do
            echo "MySQL ainda não está pronto... tentando novamente em 5s"
            sleep 5
          done
          echo "MySQL está pronto!"

      - name: Conceder permissão de execução ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Configurar variáveis de ambiente para rodar localmente
        run: |
          echo "SPRING_PROFILES_ACTIVE=local" >> $GITHUB_ENV

      # 🔍 Exibir logs do MySQL para debugging antes de rodar os testes
      - name: Exibir logs do MySQL
        run: docker logs $(docker ps -q --filter ancestor=mysql:8)

      - name: Build e Testes com Gradle
        run: ./gradlew build --no-daemon
