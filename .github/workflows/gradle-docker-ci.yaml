name: Java CI/CD with Gradle and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 262419
          MYSQL_DATABASE: biblioteca
          MYSQL_USER: root
          MYSQL_PASSWORD: 262419
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=262419"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      # ‚úÖ Configura√ß√£o do JDK 17
      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ‚ö° Configura√ß√£o do Gradle e Cache para melhor performance
      - name: Configurar Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # ‚úÖ Aguarda MySQL estar pronto antes de rodar testes
      - name: Verificar conex√£o com MySQL
        run: |
          sudo apt-get install -y mysql-client
          echo "Aguardando MySQL iniciar..."
          until mysql --host=127.0.0.1 --user=root --password=262419 -e "SHOW DATABASES;"; do
            echo "MySQL ainda n√£o est√° pronto... tentando novamente em 5s"
            sleep 5
          done
          echo "MySQL est√° pronto!"

      - name: Conceder permiss√£o de execu√ß√£o ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Configurar vari√°veis de ambiente para rodar localmente
        run: |
          echo "SPRING_PROFILES_ACTIVE=local" >> $GITHUB_ENV

      # üîç Exibir logs do MySQL para debugging antes de rodar os testes
      - name: Exibir logs do MySQL
        run: docker logs $(docker ps -q --filter ancestor=mysql:8)

      - name: Build e Testes com Gradle
        run: ./gradlew build --no-daemon

  docker:

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da Imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/biblioteca:latest .

      - name: Push da Imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/biblioteca:latest

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gerar e submeter o gr√°fico de depend√™ncias
        uses: gradle/actions/dependency-submission@v4
