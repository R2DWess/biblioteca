name: Java CI/CD with Gradle and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: biblioteca
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=user --password=password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # ✅ Alterado para JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configurar Gradle e cache de dependências
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # ✅ Verificar status do MySQL antes dos testes
      - name: Verificar conexão com MySQL
        run: |
          sudo apt-get install -y mysql-client
          until mysql --host=127.0.0.1 --user=user --password=password -e "SHOW DATABASES;"; do
            echo "Aguardando MySQL..."
            sleep 5
          done
          echo "MySQL está pronto!"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configurar variáveis de ambiente
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:mysql://127.0.0.1:3306/biblioteca" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=user" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=password" >> $GITHUB_ENV 

      # ✅ Exibir logs do MySQL para debugging antes de rodar os testes
      - name: Exibir logs do MySQL
        run: docker logs $(docker ps -q --filter ancestor=mysql:8)

      - name: Build with Gradle Wrapper
        run: ./gradlew build

  docker:

    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da Imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/biblioteca:latest .

      - name: Push da Imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/biblioteca:latest

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
